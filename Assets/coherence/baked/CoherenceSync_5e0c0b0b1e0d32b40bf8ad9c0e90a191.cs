// Copyright (c) coherence ApS.
// For all coherence generated code, the coherence SDK license terms apply. See the license file in the coherence Package root folder for more information.

// <auto-generated>
// Generated file. DO NOT EDIT!
// </auto-generated>
namespace Coherence.Generated
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using UnityEngine;
    using Coherence.Toolkit;
    using Coherence.Toolkit.Bindings;
    using Coherence.Entities;
    using Coherence.ProtocolDef;
    using Coherence.Brook;
    using Coherence.Toolkit.Bindings.ValueBindings;
    using Coherence.Toolkit.Bindings.TransformBindings;
    using Coherence.Connection;
    using Coherence.SimulationFrame;
    using Coherence.Interpolation;
    using Coherence.Log;
    using Logger = Coherence.Log.Logger;
    using UnityEngine.Scripting;
    [UnityEngine.Scripting.Preserve]
    public class Binding_5e0c0b0b1e0d32b40bf8ad9c0e90a191_08e2698ed9ba4d38bd0235b0ac3d30c3 : PositionBinding
    {   
        private global::UnityEngine.Transform CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Transform)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(WorldPosition);
        public override string CoherenceComponentName => "WorldPosition";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override UnityEngine.Vector3 Value
        {
            get { return (UnityEngine.Vector3)(coherenceSync.coherencePosition); }
            set { coherenceSync.coherencePosition = (UnityEngine.Vector3)(value); }
        }

        protected override (UnityEngine.Vector3 value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((WorldPosition)coherenceComponent).value;
            if (!coherenceSync.HasParentWithCoherenceSync) { value += floatingOriginDelta; }

            var simFrame = ((WorldPosition)coherenceComponent).valueSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (WorldPosition)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.value = Value;
            }
            else
            {
                update.value = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.valueSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new WorldPosition();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_5e0c0b0b1e0d32b40bf8ad9c0e90a191_1fb1edd5d2294ca292a682489ae0cb20 : RotationBinding
    {   
        private global::UnityEngine.Transform CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Transform)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(WorldOrientation);
        public override string CoherenceComponentName => "WorldOrientation";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override UnityEngine.Quaternion Value
        {
            get { return (UnityEngine.Quaternion)(coherenceSync.coherenceRotation); }
            set { coherenceSync.coherenceRotation = (UnityEngine.Quaternion)(value); }
        }

        protected override (UnityEngine.Quaternion value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((WorldOrientation)coherenceComponent).value;

            var simFrame = ((WorldOrientation)coherenceComponent).valueSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (WorldOrientation)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.value = Value;
            }
            else
            {
                update.value = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.valueSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new WorldOrientation();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_5e0c0b0b1e0d32b40bf8ad9c0e90a191_a4171e92120447ada92664123e60e69b : BoolAnimatorParameterBinding
    {   
        private global::UnityEngine.Animator CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Animator)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_5e0c0b0b1e0d32b40bf8ad9c0e90a191_2425740125003343674);
        public override string CoherenceComponentName => "_5e0c0b0b1e0d32b40bf8ad9c0e90a191_2425740125003343674";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override System.Boolean Value
        {
            get { return (System.Boolean)(CastedUnityComponent.GetBool(CastedDescriptor.ParameterHash)); }
            set { CastedUnityComponent.SetBool(CastedDescriptor.ParameterHash, value); }
        }

        protected override (System.Boolean value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_5e0c0b0b1e0d32b40bf8ad9c0e90a191_2425740125003343674)coherenceComponent).IsWave;

            var simFrame = ((_5e0c0b0b1e0d32b40bf8ad9c0e90a191_2425740125003343674)coherenceComponent).IsWaveSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_5e0c0b0b1e0d32b40bf8ad9c0e90a191_2425740125003343674)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.IsWave = Value;
            }
            else
            {
                update.IsWave = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.IsWaveSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _5e0c0b0b1e0d32b40bf8ad9c0e90a191_2425740125003343674();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_5e0c0b0b1e0d32b40bf8ad9c0e90a191_6538395eee9e4befaaaaa48ff0d0a723 : BoolAnimatorParameterBinding
    {   
        private global::UnityEngine.Animator CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Animator)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_5e0c0b0b1e0d32b40bf8ad9c0e90a191_2425740125003343674);
        public override string CoherenceComponentName => "_5e0c0b0b1e0d32b40bf8ad9c0e90a191_2425740125003343674";
        public override uint FieldMask => 0b00000000000000000000000000000010;

        public override System.Boolean Value
        {
            get { return (System.Boolean)(CastedUnityComponent.GetBool(CastedDescriptor.ParameterHash)); }
            set { CastedUnityComponent.SetBool(CastedDescriptor.ParameterHash, value); }
        }

        protected override (System.Boolean value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_5e0c0b0b1e0d32b40bf8ad9c0e90a191_2425740125003343674)coherenceComponent).IsRun;

            var simFrame = ((_5e0c0b0b1e0d32b40bf8ad9c0e90a191_2425740125003343674)coherenceComponent).IsRunSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_5e0c0b0b1e0d32b40bf8ad9c0e90a191_2425740125003343674)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.IsRun = Value;
            }
            else
            {
                update.IsRun = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.IsRunSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _5e0c0b0b1e0d32b40bf8ad9c0e90a191_2425740125003343674();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_5e0c0b0b1e0d32b40bf8ad9c0e90a191_2f3ccbc209834a11916a0fb8047c07a6 : BoolAnimatorParameterBinding
    {   
        private global::UnityEngine.Animator CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Animator)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_5e0c0b0b1e0d32b40bf8ad9c0e90a191_2425740125003343674);
        public override string CoherenceComponentName => "_5e0c0b0b1e0d32b40bf8ad9c0e90a191_2425740125003343674";
        public override uint FieldMask => 0b00000000000000000000000000000100;

        public override System.Boolean Value
        {
            get { return (System.Boolean)(CastedUnityComponent.GetBool(CastedDescriptor.ParameterHash)); }
            set { CastedUnityComponent.SetBool(CastedDescriptor.ParameterHash, value); }
        }

        protected override (System.Boolean value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_5e0c0b0b1e0d32b40bf8ad9c0e90a191_2425740125003343674)coherenceComponent).IsWalk;

            var simFrame = ((_5e0c0b0b1e0d32b40bf8ad9c0e90a191_2425740125003343674)coherenceComponent).IsWalkSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_5e0c0b0b1e0d32b40bf8ad9c0e90a191_2425740125003343674)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.IsWalk = Value;
            }
            else
            {
                update.IsWalk = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.IsWalkSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _5e0c0b0b1e0d32b40bf8ad9c0e90a191_2425740125003343674();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_5e0c0b0b1e0d32b40bf8ad9c0e90a191_a4e3fb5aaaf247028e89a4b000613068 : BoolAnimatorParameterBinding
    {   
        private global::UnityEngine.Animator CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Animator)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_5e0c0b0b1e0d32b40bf8ad9c0e90a191_2425740125003343674);
        public override string CoherenceComponentName => "_5e0c0b0b1e0d32b40bf8ad9c0e90a191_2425740125003343674";
        public override uint FieldMask => 0b00000000000000000000000000001000;

        public override System.Boolean Value
        {
            get { return (System.Boolean)(CastedUnityComponent.GetBool(CastedDescriptor.ParameterHash)); }
            set { CastedUnityComponent.SetBool(CastedDescriptor.ParameterHash, value); }
        }

        protected override (System.Boolean value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_5e0c0b0b1e0d32b40bf8ad9c0e90a191_2425740125003343674)coherenceComponent).IsIdle;

            var simFrame = ((_5e0c0b0b1e0d32b40bf8ad9c0e90a191_2425740125003343674)coherenceComponent).IsIdleSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_5e0c0b0b1e0d32b40bf8ad9c0e90a191_2425740125003343674)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.IsIdle = Value;
            }
            else
            {
                update.IsIdle = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.IsIdleSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _5e0c0b0b1e0d32b40bf8ad9c0e90a191_2425740125003343674();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_5e0c0b0b1e0d32b40bf8ad9c0e90a191_a7ad646de63548aca6f2866a1d57fdce : ReferenceBinding
    {   
        private global::CharacterController CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::CharacterController)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_5e0c0b0b1e0d32b40bf8ad9c0e90a191_3447004284609024788);
        public override string CoherenceComponentName => "_5e0c0b0b1e0d32b40bf8ad9c0e90a191_3447004284609024788";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override Entity Value
        {
            get { return coherenceSync.CoherenceBridge.UnityObjectToEntityId(CastedUnityComponent.characterModel); }
            set { CastedUnityComponent.characterModel = coherenceSync.CoherenceBridge.EntityIdToTransform(value); }
        }

        protected override (Entity value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_5e0c0b0b1e0d32b40bf8ad9c0e90a191_3447004284609024788)coherenceComponent).characterModel;

            var simFrame = ((_5e0c0b0b1e0d32b40bf8ad9c0e90a191_3447004284609024788)coherenceComponent).characterModelSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_5e0c0b0b1e0d32b40bf8ad9c0e90a191_3447004284609024788)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.characterModel = Value;
            }
            else
            {
                update.characterModel = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.characterModelSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _5e0c0b0b1e0d32b40bf8ad9c0e90a191_3447004284609024788();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_5e0c0b0b1e0d32b40bf8ad9c0e90a191_25710590fc384267b779feac8656cfac : IntBinding
    {   
        private global::CharacterController CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::CharacterController)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_5e0c0b0b1e0d32b40bf8ad9c0e90a191_3447004284609024788);
        public override string CoherenceComponentName => "_5e0c0b0b1e0d32b40bf8ad9c0e90a191_3447004284609024788";
        public override uint FieldMask => 0b00000000000000000000000000000010;

        public override System.Int32 Value
        {
            get { return (System.Int32)(CastedUnityComponent.Hp); }
            set { CastedUnityComponent.Hp = (System.Int32)(value); }
        }

        protected override (System.Int32 value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_5e0c0b0b1e0d32b40bf8ad9c0e90a191_3447004284609024788)coherenceComponent).Hp;

            var simFrame = ((_5e0c0b0b1e0d32b40bf8ad9c0e90a191_3447004284609024788)coherenceComponent).HpSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_5e0c0b0b1e0d32b40bf8ad9c0e90a191_3447004284609024788)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.Hp = Value;
            }
            else
            {
                update.Hp = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.HpSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _5e0c0b0b1e0d32b40bf8ad9c0e90a191_3447004284609024788();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_5e0c0b0b1e0d32b40bf8ad9c0e90a191_6cd83d1aa0464a54bda131ab968791c3 : IntBinding
    {   
        private global::CharacterController CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::CharacterController)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_5e0c0b0b1e0d32b40bf8ad9c0e90a191_3447004284609024788);
        public override string CoherenceComponentName => "_5e0c0b0b1e0d32b40bf8ad9c0e90a191_3447004284609024788";
        public override uint FieldMask => 0b00000000000000000000000000000100;

        public override System.Int32 Value
        {
            get { return (System.Int32)(CastedUnityComponent.Atk); }
            set { CastedUnityComponent.Atk = (System.Int32)(value); }
        }

        protected override (System.Int32 value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_5e0c0b0b1e0d32b40bf8ad9c0e90a191_3447004284609024788)coherenceComponent).Atk;

            var simFrame = ((_5e0c0b0b1e0d32b40bf8ad9c0e90a191_3447004284609024788)coherenceComponent).AtkSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_5e0c0b0b1e0d32b40bf8ad9c0e90a191_3447004284609024788)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.Atk = Value;
            }
            else
            {
                update.Atk = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.AtkSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _5e0c0b0b1e0d32b40bf8ad9c0e90a191_3447004284609024788();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_5e0c0b0b1e0d32b40bf8ad9c0e90a191_56b3b51650bf42edbd1038cc198698ff : IntBinding
    {   
        private global::CharacterController CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::CharacterController)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_5e0c0b0b1e0d32b40bf8ad9c0e90a191_3447004284609024788);
        public override string CoherenceComponentName => "_5e0c0b0b1e0d32b40bf8ad9c0e90a191_3447004284609024788";
        public override uint FieldMask => 0b00000000000000000000000000001000;

        public override System.Int32 Value
        {
            get { return (System.Int32)(CastedUnityComponent.CharIndex); }
            set { CastedUnityComponent.CharIndex = (System.Int32)(value); }
        }

        protected override (System.Int32 value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_5e0c0b0b1e0d32b40bf8ad9c0e90a191_3447004284609024788)coherenceComponent).CharIndex;

            var simFrame = ((_5e0c0b0b1e0d32b40bf8ad9c0e90a191_3447004284609024788)coherenceComponent).CharIndexSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_5e0c0b0b1e0d32b40bf8ad9c0e90a191_3447004284609024788)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.CharIndex = Value;
            }
            else
            {
                update.CharIndex = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.CharIndexSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _5e0c0b0b1e0d32b40bf8ad9c0e90a191_3447004284609024788();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_5e0c0b0b1e0d32b40bf8ad9c0e90a191_eff8ffce4bf24834afcced411cc1ef82 : StringBinding
    {   
        private global::CharacterController CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::CharacterController)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_5e0c0b0b1e0d32b40bf8ad9c0e90a191_3447004284609024788);
        public override string CoherenceComponentName => "_5e0c0b0b1e0d32b40bf8ad9c0e90a191_3447004284609024788";
        public override uint FieldMask => 0b00000000000000000000000000010000;

        public override System.String Value
        {
            get { return (System.String)(CastedUnityComponent.PlayerName); }
            set { CastedUnityComponent.PlayerName = (System.String)(value); }
        }

        protected override (System.String value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_5e0c0b0b1e0d32b40bf8ad9c0e90a191_3447004284609024788)coherenceComponent).PlayerName;

            var simFrame = ((_5e0c0b0b1e0d32b40bf8ad9c0e90a191_3447004284609024788)coherenceComponent).PlayerNameSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_5e0c0b0b1e0d32b40bf8ad9c0e90a191_3447004284609024788)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.PlayerName = Value;
            }
            else
            {
                update.PlayerName = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.PlayerNameSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _5e0c0b0b1e0d32b40bf8ad9c0e90a191_3447004284609024788();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_5e0c0b0b1e0d32b40bf8ad9c0e90a191_a5f612bee34248ed8875c30dfd262a12 : BoolBinding
    {   
        private global::CharacterController CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::CharacterController)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_5e0c0b0b1e0d32b40bf8ad9c0e90a191_3447004284609024788);
        public override string CoherenceComponentName => "_5e0c0b0b1e0d32b40bf8ad9c0e90a191_3447004284609024788";
        public override uint FieldMask => 0b00000000000000000000000000100000;

        public override System.Boolean Value
        {
            get { return (System.Boolean)(CastedUnityComponent.IsDead); }
            set { CastedUnityComponent.IsDead = (System.Boolean)(value); }
        }

        protected override (System.Boolean value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_5e0c0b0b1e0d32b40bf8ad9c0e90a191_3447004284609024788)coherenceComponent).IsDead;

            var simFrame = ((_5e0c0b0b1e0d32b40bf8ad9c0e90a191_3447004284609024788)coherenceComponent).IsDeadSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_5e0c0b0b1e0d32b40bf8ad9c0e90a191_3447004284609024788)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.IsDead = Value;
            }
            else
            {
                update.IsDead = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.IsDeadSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _5e0c0b0b1e0d32b40bf8ad9c0e90a191_3447004284609024788();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_5e0c0b0b1e0d32b40bf8ad9c0e90a191_5cbf9daba44f488cba60ae25f84171c2 : StringBinding
    {   
        private global::CharacterController CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::CharacterController)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_5e0c0b0b1e0d32b40bf8ad9c0e90a191_3447004284609024788);
        public override string CoherenceComponentName => "_5e0c0b0b1e0d32b40bf8ad9c0e90a191_3447004284609024788";
        public override uint FieldMask => 0b00000000000000000000000001000000;

        public override System.String Value
        {
            get { return (System.String)(CastedUnityComponent.characterName); }
            set { CastedUnityComponent.characterName = (System.String)(value); }
        }

        protected override (System.String value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_5e0c0b0b1e0d32b40bf8ad9c0e90a191_3447004284609024788)coherenceComponent).characterName;

            var simFrame = ((_5e0c0b0b1e0d32b40bf8ad9c0e90a191_3447004284609024788)coherenceComponent).characterNameSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_5e0c0b0b1e0d32b40bf8ad9c0e90a191_3447004284609024788)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.characterName = Value;
            }
            else
            {
                update.characterName = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.characterNameSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _5e0c0b0b1e0d32b40bf8ad9c0e90a191_3447004284609024788();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_5e0c0b0b1e0d32b40bf8ad9c0e90a191_21a7cf3254534631a15463c2790c035b : DeepRotationBinding
    {   
        private global::UnityEngine.Transform CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Transform)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_5e0c0b0b1e0d32b40bf8ad9c0e90a191_2630557354540798005);
        public override string CoherenceComponentName => "_5e0c0b0b1e0d32b40bf8ad9c0e90a191_2630557354540798005";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override UnityEngine.Quaternion Value
        {
            get { return (UnityEngine.Quaternion)(CastedUnityComponent.localRotation); }
            set { CastedUnityComponent.localRotation = (UnityEngine.Quaternion)(value); }
        }

        protected override (UnityEngine.Quaternion value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_5e0c0b0b1e0d32b40bf8ad9c0e90a191_2630557354540798005)coherenceComponent).rotation;

            var simFrame = ((_5e0c0b0b1e0d32b40bf8ad9c0e90a191_2630557354540798005)coherenceComponent).rotationSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_5e0c0b0b1e0d32b40bf8ad9c0e90a191_2630557354540798005)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.rotation = Value;
            }
            else
            {
                update.rotation = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.rotationSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _5e0c0b0b1e0d32b40bf8ad9c0e90a191_2630557354540798005();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_5e0c0b0b1e0d32b40bf8ad9c0e90a191_f41b59c839424428aaaf7d1512852274 : DeepPositionBinding
    {   
        private global::UnityEngine.Transform CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Transform)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_5e0c0b0b1e0d32b40bf8ad9c0e90a191_2630557354540798005);
        public override string CoherenceComponentName => "_5e0c0b0b1e0d32b40bf8ad9c0e90a191_2630557354540798005";
        public override uint FieldMask => 0b00000000000000000000000000000010;

        public override UnityEngine.Vector3 Value
        {
            get { return (UnityEngine.Vector3)(CastedUnityComponent.localPosition); }
            set { CastedUnityComponent.localPosition = (UnityEngine.Vector3)(value); }
        }

        protected override (UnityEngine.Vector3 value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_5e0c0b0b1e0d32b40bf8ad9c0e90a191_2630557354540798005)coherenceComponent).position;

            var simFrame = ((_5e0c0b0b1e0d32b40bf8ad9c0e90a191_2630557354540798005)coherenceComponent).positionSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_5e0c0b0b1e0d32b40bf8ad9c0e90a191_2630557354540798005)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.position = Value;
            }
            else
            {
                update.position = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.positionSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _5e0c0b0b1e0d32b40bf8ad9c0e90a191_2630557354540798005();
        }    
    }

    [UnityEngine.Scripting.Preserve]
    public class CoherenceSync_5e0c0b0b1e0d32b40bf8ad9c0e90a191 : CoherenceSyncBaked
    {
        private Entity entityId;
        private Logger logger = Coherence.Log.Log.GetLogger<CoherenceSync_5e0c0b0b1e0d32b40bf8ad9c0e90a191>();
        
        private global::CharacterController _5e0c0b0b1e0d32b40bf8ad9c0e90a191_1ea5d8f6098c4dfaad786d504306699c_CommandTarget;
        
        
        private IClient client;
        private CoherenceBridge bridge;
        
        private readonly Dictionary<string, Binding> bakedValueBindings = new Dictionary<string, Binding>()
        {
			["08e2698ed9ba4d38bd0235b0ac3d30c3"] = new Binding_5e0c0b0b1e0d32b40bf8ad9c0e90a191_08e2698ed9ba4d38bd0235b0ac3d30c3(),
			["1fb1edd5d2294ca292a682489ae0cb20"] = new Binding_5e0c0b0b1e0d32b40bf8ad9c0e90a191_1fb1edd5d2294ca292a682489ae0cb20(),
			["a4171e92120447ada92664123e60e69b"] = new Binding_5e0c0b0b1e0d32b40bf8ad9c0e90a191_a4171e92120447ada92664123e60e69b(),
			["6538395eee9e4befaaaaa48ff0d0a723"] = new Binding_5e0c0b0b1e0d32b40bf8ad9c0e90a191_6538395eee9e4befaaaaa48ff0d0a723(),
			["2f3ccbc209834a11916a0fb8047c07a6"] = new Binding_5e0c0b0b1e0d32b40bf8ad9c0e90a191_2f3ccbc209834a11916a0fb8047c07a6(),
			["a4e3fb5aaaf247028e89a4b000613068"] = new Binding_5e0c0b0b1e0d32b40bf8ad9c0e90a191_a4e3fb5aaaf247028e89a4b000613068(),
			["a7ad646de63548aca6f2866a1d57fdce"] = new Binding_5e0c0b0b1e0d32b40bf8ad9c0e90a191_a7ad646de63548aca6f2866a1d57fdce(),
			["25710590fc384267b779feac8656cfac"] = new Binding_5e0c0b0b1e0d32b40bf8ad9c0e90a191_25710590fc384267b779feac8656cfac(),
			["6cd83d1aa0464a54bda131ab968791c3"] = new Binding_5e0c0b0b1e0d32b40bf8ad9c0e90a191_6cd83d1aa0464a54bda131ab968791c3(),
			["56b3b51650bf42edbd1038cc198698ff"] = new Binding_5e0c0b0b1e0d32b40bf8ad9c0e90a191_56b3b51650bf42edbd1038cc198698ff(),
			["eff8ffce4bf24834afcced411cc1ef82"] = new Binding_5e0c0b0b1e0d32b40bf8ad9c0e90a191_eff8ffce4bf24834afcced411cc1ef82(),
			["a5f612bee34248ed8875c30dfd262a12"] = new Binding_5e0c0b0b1e0d32b40bf8ad9c0e90a191_a5f612bee34248ed8875c30dfd262a12(),
			["5cbf9daba44f488cba60ae25f84171c2"] = new Binding_5e0c0b0b1e0d32b40bf8ad9c0e90a191_5cbf9daba44f488cba60ae25f84171c2(),
			["21a7cf3254534631a15463c2790c035b"] = new Binding_5e0c0b0b1e0d32b40bf8ad9c0e90a191_21a7cf3254534631a15463c2790c035b(),
			["f41b59c839424428aaaf7d1512852274"] = new Binding_5e0c0b0b1e0d32b40bf8ad9c0e90a191_f41b59c839424428aaaf7d1512852274(),
        };
        
        private Dictionary<string, Action<CommandBinding, CommandsHandler>> bakedCommandBindings = new Dictionary<string, Action<CommandBinding, CommandsHandler>>();
        
        public CoherenceSync_5e0c0b0b1e0d32b40bf8ad9c0e90a191()
        {
            bakedCommandBindings.Add("1ea5d8f6098c4dfaad786d504306699c", BakeCommandBinding__5e0c0b0b1e0d32b40bf8ad9c0e90a191_1ea5d8f6098c4dfaad786d504306699c);
        }
        
        public override Binding BakeValueBinding(Binding valueBinding)
        {
            if (bakedValueBindings.TryGetValue(valueBinding.guid, out var bakedBinding))
            {
                valueBinding.CloneTo(bakedBinding);
                return bakedBinding;
            }
            
            return null;
        }
        
        public override void BakeCommandBinding(CommandBinding commandBinding, CommandsHandler commandsHandler)
        {
            if (bakedCommandBindings.TryGetValue(commandBinding.guid, out var commandBindingBaker))
            {
                commandBindingBaker.Invoke(commandBinding, commandsHandler);
            }
        }
        private void BakeCommandBinding__5e0c0b0b1e0d32b40bf8ad9c0e90a191_1ea5d8f6098c4dfaad786d504306699c(CommandBinding commandBinding, CommandsHandler commandsHandler)
        {
            _5e0c0b0b1e0d32b40bf8ad9c0e90a191_1ea5d8f6098c4dfaad786d504306699c_CommandTarget = (global::CharacterController)commandBinding.UnityComponent;
            commandsHandler.AddBakedCommand(
            	"CharacterController.SetHP",
            	"(System.Int32)",
            	SendCommand__5e0c0b0b1e0d32b40bf8ad9c0e90a191_1ea5d8f6098c4dfaad786d504306699c,
            	ReceiveLocalCommand__5e0c0b0b1e0d32b40bf8ad9c0e90a191_1ea5d8f6098c4dfaad786d504306699c,
            	MessageTarget.All,
            	_5e0c0b0b1e0d32b40bf8ad9c0e90a191_1ea5d8f6098c4dfaad786d504306699c_CommandTarget,
            	commandBinding.UsesMeta());
        }
        
        private void SendCommand__5e0c0b0b1e0d32b40bf8ad9c0e90a191_1ea5d8f6098c4dfaad786d504306699c(GenericCommandRequestArgs requestArgs)
        {
            var command = new _5e0c0b0b1e0d32b40bf8ad9c0e90a191_1ea5d8f6098c4dfaad786d504306699c();
            command.Frame = requestArgs.Frame;
            command.SenderClientID = requestArgs.Sender;
            command.UsesMeta = requestArgs.UsesMeta;
            command.Target = requestArgs.Target;
            command.Entity = entityId;

            command.hp = (System.Int32)requestArgs.Args[0];

            client.SendCommand(command, requestArgs.ChannelID);
        }
        
        private void ReceiveLocalCommand__5e0c0b0b1e0d32b40bf8ad9c0e90a191_1ea5d8f6098c4dfaad786d504306699c(GenericCommandRequestArgs requestArgs)
        {
            var command = new _5e0c0b0b1e0d32b40bf8ad9c0e90a191_1ea5d8f6098c4dfaad786d504306699c();
            command.Frame = requestArgs.Frame;
            command.SenderClientID = requestArgs.Sender;

            command.hp = (System.Int32)requestArgs.Args[0];

            ReceiveCommand__5e0c0b0b1e0d32b40bf8ad9c0e90a191_1ea5d8f6098c4dfaad786d504306699c(command);
        }

        private void ReceiveCommand__5e0c0b0b1e0d32b40bf8ad9c0e90a191_1ea5d8f6098c4dfaad786d504306699c(_5e0c0b0b1e0d32b40bf8ad9c0e90a191_1ea5d8f6098c4dfaad786d504306699c command)
        {
            var target = _5e0c0b0b1e0d32b40bf8ad9c0e90a191_1ea5d8f6098c4dfaad786d504306699c_CommandTarget;
			target.SetHP((System.Int32)(command.hp));
        }
        
        public override void ReceiveCommand(IEntityCommand command)
        {
            switch (command)
            {
                case _5e0c0b0b1e0d32b40bf8ad9c0e90a191_1ea5d8f6098c4dfaad786d504306699c castedCommand:
                    ReceiveCommand__5e0c0b0b1e0d32b40bf8ad9c0e90a191_1ea5d8f6098c4dfaad786d504306699c(castedCommand);
                    break;
                default:
                    logger.Warning(Coherence.Log.Warning.ToolkitBakedSyncReceiveCommandUnhandled,
                        $"CoherenceSync_5e0c0b0b1e0d32b40bf8ad9c0e90a191 Unhandled command: {command.GetType()}.");
                    break;
            }
        }
        
        public override void CreateEntity(bool usesLodsAtRuntime, string archetypeName, AbsoluteSimulationFrame simFrame, List<ICoherenceComponentData> components)
        {

            if (!usesLodsAtRuntime)
            {
                return;
            }
            
            if (Archetypes.IndexForName.TryGetValue(archetypeName, out int archetypeIndex))
            {
                components.Add(new ArchetypeComponent
                    {
                        index = archetypeIndex,
                        indexSimulationFrame = simFrame,
                        FieldsMask = 0b1
                    }
                );

                return;                
            }
    
            logger.Warning(Coherence.Log.Warning.ToolkitBakedSyncCreateEntityMissingArchetype,
                $"Unable to find archetype {archetypeName} in dictionary. Please, bake manually (coherence > Bake)");
        }
        
        public override void Dispose()
        {
        }
        
        public override void Initialize(Entity entityId, CoherenceBridge bridge, IClient client, CoherenceInput input, Logger logger)
        {
            this.logger = logger.With<CoherenceSync_5e0c0b0b1e0d32b40bf8ad9c0e90a191>();
            this.bridge = bridge;
            this.entityId = entityId;
            this.client = client;        
        }
    }
}
